// Generated by CoffeeScript 1.4.0
(function() {

  LOAF.YelpList = Backbone.Collection.extend({
    model: LOAF.Business,
    url: 'http://api.yelp.com/v2/search?',
    fetch: function(options) {
      var accessor, message, parameterMap, parameters;
      if (!options) {
        options = {};
      }
      accessor = {
        consumerSecret: LOAF.auth.consumerSecret,
        tokenSecret: LOAF.auth.accessTokenSecret
      };
      parameters = [];
      parameters.push(['callback', 'cb']);
      parameters.push(['oauth_consumer_key', LOAF.auth.consumerKey]);
      parameters.push(['oauth_consumer_secret', LOAF.auth.consumerSecret]);
      parameters.push(['oauth_token', LOAF.auth.accessToken]);
      parameters.push(['oauth_signature_method', 'HMAC-SHA1']);
      parameters.push(['location', "New York City"]);
      message = {
        'action': this.url,
        'method': 'GET',
        'parameters': parameters
      };
      OAuth.setTimestampAndNonce(message);
      OAuth.SignatureMethod.sign(message, accessor);
      parameterMap = OAuth.getParameterMap(message.parameters);
      parameterMap.oauth_signature = OAuth.percentEncode(parameterMap.oauth_signature);
      options.url = this.url;
      options.data = parameterMap;
      options.cache = true;
      options.dataType = 'jsonp';
      options.jsonpCallback = 'cb';
      options.success = this._onResponse;
      options.context = this;
      return $.ajax(options);
    },
    _onResponse: function(data, textStats, xhr) {
      debugger;
      var _this = this;
      return _.each(data.businesses, function(business) {
        var busModel;
        if (!_this.get(business.id)) {
          busModel = new LOAF.Business(business);
          return _this.add(busModel);
        }
      });
    }
  });

}).call(this);
