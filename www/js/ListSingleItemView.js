// Generated by CoffeeScript 1.4.0
(function() {

  LOAF.ListSingleItemView = Backbone.View.extend({
    tagName: "div",
    className: "bcrumbs-single-list-item bcrumbs-listing",
    initialize: function(options) {
      this.current = "none";
      return this.template = options.template;
    },
    events: {
      "mouseover .icon-info-sign": "onShowInfo",
      "mouseover .icon-plus": "onShowAdd",
      "mouseover .icon-edit": "onShowEdit",
      "mouseover .icon-list": "onShowLists",
      "mouseover .icon-star": "onShowReviews",
      "click .icon-info-sign": "onClickInfo",
      "click .icon-plus": "onClickAdd",
      "click .icon-edit": "onClickEdit",
      "click .icon-list": "onClickLists",
      "click .icon-star": "onClickReviews",
      "mouseout .bcrumbs-single-icons": "onExit"
    },
    onClickInfo: function() {
      if (this.current === "info") {
        return this.current = "none";
      } else {
        return this.current = "info";
      }
    },
    onClickLists: function() {
      if (this.current === "lists") {
        return this.current = "none";
      } else {
        return this.current = "lists";
      }
    },
    onClickReviews: function() {
      if (this.current === "reviews") {
        return this.current = "none";
      } else {
        return this.current = "reviews";
      }
    },
    onClickAdd: function(e) {
      return LOAF.allCrumbsList.add(this.model);
    },

    onClickEdit: function() {
      if (this.current === "notes") {
        return this.current = "none";
      } else {
      return this.current = "notes";
      }
    },

    onShowInfo: function() {
      if (this.current === "info" || this.current === "none") {
        this.$(".img-overlay-text >span").hide();
        this.$(".img-overlay-text").show();
        this.$(".img-overlay").show();
        return this.$(".bc-list-view-single-info").show();
      }
    },
    onShowAdd: function() {
      if (this.current === "none") {
        this.$(".img-overlay-text >span").hide();
        this.$(".img-overlay-text").show();
        this.$(".img-overlay").show();
        return this.$(".bc-list-view-single-add").show();
      }
    },
    onShowLists: function() {
      if (this.current === "lists" || this.current === "none") {
        this.$(".img-overlay-text >span").hide();
        this.$(".img-overlay-text").show();
        this.$(".img-overlay").show();
        return this.$(".bc-list-view-single-lists").show();
      }
    },
    onShowReviews: function() {
      if (this.current === "reviews" || this.current === "none") {
        this.$(".img-overlay-text >span").hide();
        this.$(".img-overlay-text").show();
        this.$(".img-overlay").show();
        return this.$(".bc-list-view-single-reviews").show();
      }
    },

    onShowEdit: function() {
      if (this.current === "edit" || this.current === "none") {
        this.$(".img-overlay-text >span").hide();
        this.$(".img-overlay-text").show();
        this.$(".img-overlay").show();
        return this.$(".bc-list-view-single-notes").show();
      }
    },

    onExit: function() {
      if (this.current === "none") {
        this.$(".img-overlay-text").hide();
        return this.$(".img-overlay").hide();
      }
    },
    render: function() {
      this.$el.html(Mustache.render(this.template, this.model.attributes));
      return this;
    }
  });

}).call(this);
